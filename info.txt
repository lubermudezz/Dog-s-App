- [ ] __GET /dogs__:
  - Obtener un listado de las razas de perro
  - Debe devolver solo los datos necesarios para la ruta principal

router.get("/", (req, res) => {  ------> /dogs
    getInfo
    getInfoDb
    getInfoApi
})

let getInfoApi = router.get("/", (req, res) => {
    let {race} = req.query
    if(race) {
        const races_post = post.filter((r) => r.name.toLowerCase().includes(race.toLowerCase()))
        return res.json(races_post)
    }
    res.json(races_post) ------------> post seria un array con los perros de la DB y de la API
})


Imagen
  - Nombre
  - Temperamento
  - Peso

- [ ] __GET /dogs?name="..."__:
  - Obtener un listado de las razas de perro que contengan la palabra ingresada como query parameter
  - Si no existe ninguna raza de perro mostrar un mensaje adecuado
- [ ] __GET /dogs/{idRaza}__:
  - Obtener el detalle de una raza de perro en particular
  - Debe traer solo los datos pedidos en la ruta de detalle de raza de perro
  - Incluir los temperamentos asociados
- [ ] __POST /dogs__:
  - Recibe los datos recolectados desde el formulario controlado de la ruta de creación de raza de perro por body
  - Crea una raza de perro en la base de datos relacionada con sus temperamentos
- [ ] __GET /temperaments__:
  - Obtener todos los temperamentos posibles
  - En una primera instancia deberán obtenerlos desde la API externa y guardarlos en su propia base de datos y luego ya utilizarlos desde allí